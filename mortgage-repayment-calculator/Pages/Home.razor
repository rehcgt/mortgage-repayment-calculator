@page "/"
@using mortgage_repayment_calculator.Components

<div class="h-100 d-flex align-items-center container">
    <div class="d-flex w-100 justify-content-between rounded-5 shadow">
        <div class="p-5 w-50">
            <div class="d-flex justify-content-between align-items-baseline">
                <h2>Mortgage Calculator</h2>
                <a @onclick="@ClearAll" class="link-underline-dark link-dark link-opacity-75" style="cursor:pointer;">Clear All</a>
            </div>
            <div class="mt-5">
                <div class="row mb-3">
                    <FocusInput @ref="MortgageAmountInput" LabelText="Mortgage Amount" PutInputTextOnLeft="true" InputId="mortgage_amount" Placeholder="100.00" Unit="$" Value="@MortgageAmount" ValueChanged="@(amount => MortgageAmount = amount)" />
                </div>
                <div class="row">
                    <div class="mb-3 col">
                        <FocusInput @ref="MortgageTermInput" LabelText="Mortgage Term" InputId="mortgage_term" Placeholder="5" Unit="years" Value="@MortgageTerm" ValueChanged="@(term => MortgageTerm = term)" />
                    </div>
                    <div class="mb-3 col">
                        <FocusInput @ref="InterestRangeInput" LabelText="Interest Range" InputId="interest_range" Placeholder="5.25" Unit="%" Value="@InterestRange" ValueChanged="@(range => InterestRange = range)" />
                    </div>
                </div>
                <div class="row">
                    <FocusCheckbox Id="repayment" GroupName="mortgage_type" Value="@MortgageType" Label="Repayment" IsSelected="@(MortgageType == null || MortgageType == "repayment")" IsSelectedChanged="@(value => MortgageType = value ? "repayment" : "")" />
                    <FocusCheckbox Id="interest_only" GroupName="mortgage_type" Value="@MortgageType" Label="Interest Only" IsSelected="@(MortgageType == "interest_only")" IsSelectedChanged="@(value => MortgageType = value ? "interest_only" : "")" />
                </div>
                <div class="row mt-4">
                    <button class="btn btn-warning rounded-4 w-75" @onclick="CalculateRepayments">
                        <img src="/images/icon-calculator.svg" />
                        <strong>Calculate Repayments</strong>
                    </button>
                </div>
            </div>
        </div>
        <div class="p-5 w-50 bg-dark text-white rounded-bottom-5 rounded-end-5 d-flex align-items-center justify-content-center">
            <div class="container">
                @if (RepaymentAmount.HasValue)
                {
                    <h3>Your Results</h3>
                    <div class="text-info">
                        Your results are shown below based on the information you provided.
                        To adjust the results edit the form and click "Calculate Repayments" again.
                    </div>
                    <div class="bg-black border-top border-warning rounded-2 p-3 mt-2 rounded border-2">
                        @if (MortgageType == "repayment")
                        {
                            <div class="text-info">Your monthly repayments</div>
                        }
                        else
                        {
                            <div class="text-info">Your interest only payment</div>
                        }
                        <h1 class="text-warning mt-2">$@String.Format("{0:N2}", RepaymentAmount)</h1>
                        <hr />
                        <div class="text-info mt-3">Total you'll repay over the term</div>
                        <h3>$@String.Format("{0:N2}", TotalRepayment)</h3>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <img src="/images/illustration-empty.svg" />
                        <h3>Results shown here</h3>
                        <div class="text-info">
                            Complete the form and click "Calculate Payments" to see what your
                            monthly repayments would be
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private double? MortgageAmount { get; set; }
    private double? MortgageTerm { get; set; }
    private double? InterestRange { get; set; }
    private string MortgageType { get; set; } = "repayment";
    private double? RepaymentAmount { get; set; }
    private double? TotalRepayment { get; set; }

    private FocusInput MortgageAmountInput;
    private FocusInput MortgageTermInput;
    private FocusInput InterestRangeInput;


    private void CalculateRepayments()
    {
        if (MortgageAmount.HasValue && MortgageTerm.HasValue && InterestRange.HasValue)
        {
            //M = P [ I(1 + I)N ] / [ (1 + I)N − 1]
            var P = MortgageAmount.Value;
            var I = InterestRange.Value / 100;
            var N = MortgageTerm.Value * 12;
            var M = P * ((I * Math.Pow(1 + I, N)) / (Math.Pow(1 + I, N) - 1));
            var IM = (M * N - P)/N;

            RepaymentAmount = MortgageType == "repayment"
                ? RepaymentAmount = Math.Round(M, 2)
                : RepaymentAmount = Math.Round(IM, 2);

            TotalRepayment = RepaymentAmount * N;
        }
        else
        {
            if (!MortgageAmount.HasValue)
            {
                MortgageAmountInput.MarkAsDanger();
            }
            if (!MortgageTerm.HasValue)
            {
                MortgageTermInput.MarkAsDanger();
            }
            if (!InterestRange.HasValue)
            {
                InterestRangeInput.MarkAsDanger();
            }
        }
    }

    private void ClearAll()
    {
        MortgageAmount = null;
        MortgageTerm = null;
        InterestRange = null;
        MortgageType = "repayment";
        RepaymentAmount = null;
        MortgageAmountInput.Reset();
        MortgageTermInput.Reset();
        InterestRangeInput.Reset();
    }
}